{"version":3,"sources":["pages/Homepage/index.tsx","utils/index.ts","pages/JsonToInterface/index.tsx","pages/YYJH/zjsz.tsx","routes/index.tsx","lang/i18n.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["JsonToInterface","_jsxs","children","Helmet","_jsx","charSet","React","memo","getRealTypeOfObj","obj","Array","isArray","jsonValue","setJsonValue","useState","interfaceValue","setInterfaceValue","onJsonValueChange","useCallback","e","target","value","res","dealObject","level","tmp","whitespace","propertyWhitespace","i","length","obj1Type","obj2Type","concat","map","Map","forEach","item","set","mapArray","from","tmpObject","objectKeyMap","Object","keys","key","typeList","get","type","push","_ref","tmpTypeList","Set","indexOf","filter","join","index","jsonObject","JSON","parse","_Fragment","className","placeholder","onChange","onPaste","disabled","ZhuJianShanZhuang","form","useForm","schema","useMemo","properties","cangkuTong","title","cangkuTie","cangkuYin","cangkuJin","duandafangTong","duandafangTie","duandafangYin","duandafangJin","huolufangTong","huolufangTie","huolufangYin","huolufangJin","formData","setFormData","style","width","margin","FormRender","displayType","labelAlign","labelWidth","watch","values","routes","path","process","exact","component","Homepage","Zhujianshanzhuang","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enUsTrans","zh","zhCnTrans","fallbackLng","debug","interpolation","escapeValue","App","BrowserRouter","renderRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f87fce82.chunk.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\ninterface Test {\n  test1: string\n  test2: number\n  test3: boolean\n  test4: {\n    test5: string\n    test6: {\n      test7: string\n      test8: (string | number)[]\n      test9: string[]\n      test10: number[]\n    }\n  }\n  test11: {\n    test12: string\n    test13: number\n    test14: (string | number | boolean)[]\n    test15: string[]\n    test16: number[]\n  }[]\n  test17: [\n    (number | string | boolean)[],\n    {\n      test18: number\n      test19: string\n    },\n    number[],\n    {\n      test20: number\n      test21: string\n    }\n  ]\n}\n\nconst JsonToInterface: React.FC = () => {\n  return (\n    <div>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>首页</title>\n      </Helmet>\n      <div>这是首页</div>\n    </div>\n  )\n}\n\nexport default React.memo(JsonToInterface)\n","export function getRealTypeOfObj(obj: unknown): string {\n  if (obj === null) {\n    return 'null'\n  }\n  if (Array.isArray(obj)) {\n    return 'array'\n  }\n  return typeof obj\n}\n","import React, { useCallback, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { getRealTypeOfObj } from '@/utils'\nimport './style.scoped.scss'\n\nconst JsonToInterface: React.FC = () => {\n  const [jsonValue, setJsonValue] = useState('')\n  const [interfaceValue, setInterfaceValue] = useState('')\n\n  const onJsonValueChange = useCallback(\n    (e) => {\n      setJsonValue(e.target.value)\n      let res = 'interface RootObject'\n\n      const dealObject = (obj: unknown, level: number) => {\n        let tmp = ''\n        let whitespace = ''\n        let propertyWhitespace = '  '\n        for (let i = 1; i < level; i++) {\n          whitespace += '  '\n          propertyWhitespace += '  '\n        }\n        if (Array.isArray(obj)) {\n          if (obj.length === 0) {\n            tmp += `[enpty array]`\n          } else if (\n            // 如果是数组，要判断元素是否是基础类型，并且还要判断每个元素类型是否一样，长度为2且数据类型不同，则认为是元组，否则认为是联合类型的数组\n            obj.length === 2 &&\n            getRealTypeOfObj(obj[0]) !== getRealTypeOfObj(obj[1])\n          ) {\n            const obj1Type = getRealTypeOfObj(obj[0])\n            const obj2Type = getRealTypeOfObj(obj[1])\n            tmp += `[${\n              obj1Type === 'object'\n                ? dealObject(obj[0] as unknown, level + 1)\n                : obj1Type\n            }, ${\n              obj2Type === 'object'\n                ? dealObject(obj[1] as unknown, level + 1)\n                : obj2Type\n            }]`\n          } else {\n            const map = new Map() // 使用map存所有的类型,如果最后只有一个key则直接返回 类型[]\n            obj.forEach((item) => {\n              map.set(getRealTypeOfObj(item), true)\n            })\n            const mapArray = Array.from(map)\n            if (mapArray.length === 1) {\n              if (mapArray[0][0] === 'object') {\n                let tmpObject = {}\n                obj.forEach((item) => {\n                  tmpObject = { ...tmpObject, ...item }\n                })\n                const objectKeyMap = new Map()\n                obj.forEach((item) => {\n                  Object.keys(tmpObject).forEach((key) => {\n                    const typeList = objectKeyMap.get(key) || []\n                    const type = getRealTypeOfObj(item[key])\n                    if (type === 'object') {\n                      // 层级过深，抛出错误\n                      setInterfaceValue('invalid json')\n                    } else if (type === 'array') {\n                      typeList.push(dealObject(item[key], level + 1))\n                      objectKeyMap.set(key, typeList)\n                    } else {\n                      typeList.push(type)\n                      objectKeyMap.set(key, typeList)\n                    }\n                  })\n                })\n                tmp += `\\n${propertyWhitespace}{`\n                Array.from(objectKeyMap).forEach(([key, typeList]) => {\n                  tmp += `\\n${whitespace}${propertyWhitespace}${key}`\n                  const tmpTypeList = Array.from(new Set(typeList))\n                  if (tmpTypeList.indexOf('undefined') >= 0) {\n                    tmp += '?'\n                  }\n                  tmp += ': '\n                  tmp += tmpTypeList\n                    .filter((item) => item !== 'undefined')\n                    .join(' | ')\n                })\n                tmp += `\\n${propertyWhitespace}}`\n              } else {\n                tmp += mapArray[0][0]\n              }\n            } else if (mapArray.length > 1) {\n              tmp += '('\n              mapArray.forEach((item, index) => {\n                tmp += item[0]\n                if (index !== mapArray.length - 1) {\n                  tmp += ' | '\n                }\n              })\n              tmp += ')'\n            }\n            tmp += '[]'\n          }\n        } else {\n          tmp += '{'\n          Object.keys(obj as JsonObject).forEach((key) => {\n            if (Array.isArray((obj as JsonObject)[key] as unknown)) {\n              tmp += `\\n${propertyWhitespace}${key}: ${dealObject(\n                (obj as JsonObject)[key] as unknown,\n                level + 1\n              )}`\n            } else if (typeof (obj as JsonObject)[key] === 'object') {\n              if ((obj as JsonObject)[key] === null) {\n                tmp += `\\n${propertyWhitespace}${key}: null | [to be determined]`\n              } else if (Object.keys((obj as JsonObject)[key]).length === 0) {\n                tmp += `\\n${propertyWhitespace}${key}: [empty object]`\n              } else {\n                tmp += `\\n${propertyWhitespace}${key}: ${dealObject(\n                  (obj as JsonObject)[key] as unknown,\n                  level + 1\n                )}`\n              }\n            } else {\n              tmp += `\\n${propertyWhitespace}${key}: ${typeof (\n                obj as JsonObject\n              )[key]}`\n            }\n          })\n          tmp += `\\n${whitespace}}`\n        }\n        return tmp\n      }\n      const jsonObject = JSON.parse(jsonValue)\n      res += dealObject(jsonObject, 1)\n      setInterfaceValue(res)\n    },\n    [jsonValue]\n  )\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>json转ts interface</title>\n      </Helmet>\n      <p className=\"tip\">* 长度为2的数组，会被视作元组</p>\n      <div className=\"json-to-interface-container\">\n        <textarea\n          placeholder=\"请输入json\"\n          onChange={onJsonValueChange}\n          onPaste={onJsonValueChange}\n        />\n        {/* <div className=\"transfer-btn\">转换</div> */}\n        <textarea disabled placeholder=\"interface\" value={interfaceValue} />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(JsonToInterface)\n","import React, { useState, useMemo } from 'react'\nimport FormRender, { FRProps, useForm } from 'form-render'\n\nconst ZhuJianShanZhuang: React.FC = () => {\n  const form = useForm()\n  const schema = useMemo<FRProps['schema']>(\n    () => ({\n      type: 'object',\n      properties: {\n        cangkuTong: {\n          type: 'number',\n          title: '仓库 铜',\n        },\n        cangkuTie: {\n          type: 'number',\n          title: '仓库 铁',\n        },\n        cangkuYin: {\n          type: 'number',\n          title: '仓库 银',\n        },\n        cangkuJin: {\n          type: 'number',\n          title: '仓库 金',\n        },\n        duandafangTong: {\n          type: 'number',\n          title: '锻打房 铜',\n        },\n        duandafangTie: {\n          type: 'number',\n          title: '锻打房 铁',\n        },\n        duandafangYin: {\n          type: 'number',\n          title: '锻打房 银',\n        },\n        duandafangJin: {\n          type: 'number',\n          title: '锻打房 金',\n        },\n        huolufangTong: {\n          type: 'number',\n          title: '火炉房 铜',\n        },\n        huolufangTie: {\n          type: 'number',\n          title: '火炉房 铁',\n        },\n        huolufangYin: {\n          type: 'number',\n          title: '火炉房 银',\n        },\n        huolufangJin: {\n          type: 'number',\n          title: '火炉房 金',\n        },\n      },\n    }),\n    []\n  )\n\n  const [formData, setFormData] = useState({\n    cangkuJin: 0,\n    cangkuTie: 0,\n    cangkuTong: 0,\n    cangkuYin: 0,\n    duandafangJin: 0,\n    duandafangTie: 0,\n    duandafangTong: 0,\n    duandafangYin: 0,\n    huolufangJin: 0,\n    huolufangTie: 0,\n    huolufangTong: 0,\n    huolufangYin: 0,\n  })\n\n  return (\n    <div\n      style={{\n        width: 300,\n        margin: '0 auto',\n      }}\n    >\n      <h3>烟雨江湖-铸剑山庄 仓库清点工具</h3>\n      <FormRender\n        displayType=\"row\"\n        labelAlign=\"right\"\n        labelWidth={120}\n        form={form}\n        schema={schema}\n        watch={{\n          '#': (values) => {\n            setFormData(values)\n          },\n        }}\n      />\n      <p>总计</p>\n      <p>\n        铜：\n        {(formData.cangkuTong || 0) +\n          (formData.huolufangTong || 0) +\n          (formData.duandafangTong || 0)}\n      </p>\n      <p>\n        铁：\n        {(formData.cangkuTie || 0) +\n          (formData.huolufangTie || 0) +\n          (formData.duandafangTie || 0)}\n      </p>\n      <p>\n        银：\n        {(formData.cangkuYin || 0) +\n          (formData.huolufangYin || 0) +\n          (formData.duandafangYin || 0)}\n      </p>\n      <p>\n        金：\n        {(formData.cangkuJin || 0) +\n          (formData.huolufangJin || 0) +\n          (formData.duandafangJin || 0)}\n      </p>\n    </div>\n  )\n}\n\nexport default React.memo(ZhuJianShanZhuang)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Homepage from '@/pages/Homepage'\nimport JsonToInterface from '@/pages/JsonToInterface'\nimport Zhujianshanzhuang from '@/pages/YYJH/zjsz'\nimport { RouteConfig } from 'react-router-config'\n\nconst routes: RouteConfig[] = [\n  {\n    path: `${\n      process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : ''\n    }/`,\n    exact: true,\n    component: Homepage,\n  },\n  {\n    path: `${\n      process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : ''\n    }/json-to-interface`,\n    exact: true,\n    component: JsonToInterface,\n  },\n  {\n    path: `${\n      process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : ''\n    }/yyjh-zjsz`,\n    exact: true,\n    component: Zhujianshanzhuang,\n  },\n]\n\nexport default routes\n","import LanguageDetector from 'i18next-browser-languagedetector'\nimport i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport enUsTrans from './en-us.json'\nimport zhCnTrans from './zh-cn.json'\n\ni18n\n  .use(LanguageDetector) // 嗅探当前浏览器语言\n  .use(initReactI18next) // init i18next\n  .init({\n    // 引入资源文件\n    resources: {\n      en: {\n        translation: enUsTrans,\n      },\n      zh: {\n        translation: zhCnTrans,\n      },\n    },\n    // 选择默认语言，选择内容为上述配置中的key，即en/zh\n    fallbackLng: 'zh',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  })\n\nexport default i18n\n","/*\n * @Date: 2021-03-04 15:31:31\n * @LastEditors: ZHT\n * @LastEditTime: 2021-03-04 16:07:09\n */\nimport React from 'react'\nimport { renderRoutes } from 'react-router-config'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport routes from './routes'\nimport '@/lang/i18n'\nimport './App.css'\n\nconst App: React.FC = () => {\n  return <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}