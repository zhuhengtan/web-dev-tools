{"version":3,"sources":["pages/Homepage/index.tsx","utils/index.ts","pages/JsonToInterface/index.tsx","routes/index.tsx","lang/i18n.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["JsonToInterface","Helmet","charSet","React","memo","getRealTypeOfObj","obj","Array","isArray","useState","jsonValue","setJsonValue","interfaceValue","setInterfaceValue","onJsonValueChange","useCallback","e","target","value","res","dealObject","level","tmp","whitespace","propertyWhitespace","i","length","obj1Type","obj2Type","map","Map","forEach","item","set","mapArray","from","tmpObject","objectKeyMap","Object","keys","key","typeList","get","type","push","tmpTypeList","Set","indexOf","filter","join","index","JSON","parse","className","placeholder","onChange","onPaste","disabled","routes","path","process","exact","component","Homepage","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enUsTrans","zh","zhCnTrans","fallbackLng","debug","interpolation","escapeValue","App","renderRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5943356.chunk.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\ninterface Test {\n  test1: string\n  test2: number\n  test3: boolean\n  test4: {\n    test5: string\n    test6: {\n      test7: string\n      test8: (string | number)[]\n      test9: string[]\n      test10: number[]\n    }\n  }\n  test11: {\n    test12: string\n    test13: number\n    test14: (string | number | boolean)[]\n    test15: string[]\n    test16: number[]\n  }[]\n  test17: [\n    (number | string | boolean)[],\n    {\n      test18: number\n      test19: string\n    },\n    number[],\n    {\n      test20: number\n      test21: string\n    }\n  ]\n}\n\nconst JsonToInterface: React.FC = () => {\n  return (\n    <div>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>首页</title>\n      </Helmet>\n      <div>这是首页</div>\n    </div>\n  )\n}\n\nexport default React.memo(JsonToInterface)\n","export function getRealTypeOfObj(obj: unknown): string {\n  if (obj === null) {\n    return 'null'\n  }\n  if (Array.isArray(obj)) {\n    return 'array'\n  }\n  return typeof obj\n}\n","import React, { useCallback, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { getRealTypeOfObj } from '@/utils'\nimport './style.scoped.scss'\n\nconst JsonToInterface: React.FC = () => {\n  const [jsonValue, setJsonValue] = useState('')\n  const [interfaceValue, setInterfaceValue] = useState('')\n\n  const onJsonValueChange = useCallback(\n    (e) => {\n      setJsonValue(e.target.value)\n      let res = 'interface RootObject'\n\n      const dealObject = (obj: unknown, level: number) => {\n        let tmp = ''\n        let whitespace = ''\n        let propertyWhitespace = '  '\n        for (let i = 1; i < level; i++) {\n          whitespace += '  '\n          propertyWhitespace += '  '\n        }\n        if (Array.isArray(obj)) {\n          if (obj.length === 0) {\n            tmp += `[enpty array]`\n          } else if (\n            // 如果是数组，要判断元素是否是基础类型，并且还要判断每个元素类型是否一样，长度为2且数据类型不同，则认为是元组，否则认为是联合类型的数组\n            obj.length === 2 &&\n            getRealTypeOfObj(obj[0]) !== getRealTypeOfObj(obj[1])\n          ) {\n            const obj1Type = getRealTypeOfObj(obj[0])\n            const obj2Type = getRealTypeOfObj(obj[1])\n            tmp += `[${\n              obj1Type === 'object'\n                ? dealObject(obj[0] as unknown, level + 1)\n                : obj1Type\n            }, ${\n              obj2Type === 'object'\n                ? dealObject(obj[1] as unknown, level + 1)\n                : obj2Type\n            }]`\n          } else {\n            const map = new Map() // 使用map存所有的类型,如果最后只有一个key则直接返回 类型[]\n            obj.forEach((item) => {\n              map.set(getRealTypeOfObj(item), true)\n            })\n            const mapArray = Array.from(map)\n            if (mapArray.length === 1) {\n              if (mapArray[0][0] === 'object') {\n                let tmpObject = {}\n                obj.forEach((item) => {\n                  tmpObject = { ...tmpObject, ...item }\n                })\n                const objectKeyMap = new Map()\n                obj.forEach((item) => {\n                  Object.keys(tmpObject).forEach((key) => {\n                    const typeList = objectKeyMap.get(key) || []\n                    const type = getRealTypeOfObj(item[key])\n                    if (type === 'object') {\n                      // 层级过深，抛出错误\n                      setInterfaceValue('invalid json')\n                    } else if (type === 'array') {\n                      typeList.push(dealObject(item[key], level + 1))\n                      objectKeyMap.set(key, typeList)\n                    } else {\n                      typeList.push(type)\n                      objectKeyMap.set(key, typeList)\n                    }\n                  })\n                })\n                tmp += `\\n${propertyWhitespace}{`\n                Array.from(objectKeyMap).forEach(([key, typeList]) => {\n                  tmp += `\\n${whitespace}${propertyWhitespace}${key}`\n                  const tmpTypeList = Array.from(new Set(typeList))\n                  if (tmpTypeList.indexOf('undefined') >= 0) {\n                    tmp += '?'\n                  }\n                  tmp += ': '\n                  tmp += tmpTypeList\n                    .filter((item) => item !== 'undefined')\n                    .join(' | ')\n                })\n                tmp += `\\n${propertyWhitespace}}`\n              } else {\n                tmp += mapArray[0][0]\n              }\n            } else if (mapArray.length > 1) {\n              tmp += '('\n              mapArray.forEach((item, index) => {\n                tmp += item[0]\n                if (index !== mapArray.length - 1) {\n                  tmp += ' | '\n                }\n              })\n              tmp += ')'\n            }\n            tmp += '[]'\n          }\n        } else {\n          tmp += '{'\n          Object.keys(obj as JsonObject).forEach((key) => {\n            if (Array.isArray((obj as JsonObject)[key] as unknown)) {\n              tmp += `\\n${propertyWhitespace}${key}: ${dealObject(\n                (obj as JsonObject)[key] as unknown,\n                level + 1\n              )}`\n            } else if (typeof (obj as JsonObject)[key] === 'object') {\n              if ((obj as JsonObject)[key] === null) {\n                tmp += `\\n${propertyWhitespace}${key}: null | [to be determined]`\n              } else if (Object.keys((obj as JsonObject)[key]).length === 0) {\n                tmp += `\\n${propertyWhitespace}${key}: [empty object]`\n              } else {\n                tmp += `\\n${propertyWhitespace}${key}: ${dealObject(\n                  (obj as JsonObject)[key] as unknown,\n                  level + 1\n                )}`\n              }\n            } else {\n              tmp += `\\n${propertyWhitespace}${key}: ${typeof (obj as JsonObject)[\n                key\n              ]}`\n            }\n          })\n          tmp += `\\n${whitespace}}`\n        }\n        return tmp\n      }\n      const jsonObject = JSON.parse(jsonValue)\n      res += dealObject(jsonObject, 1)\n      setInterfaceValue(res)\n    },\n    [jsonValue]\n  )\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>json转ts interface</title>\n      </Helmet>\n      <p className=\"tip\">* 长度为2的数组，会被视作元组</p>\n      <div className=\"json-to-interface-container\">\n        <textarea\n          placeholder=\"请输入json\"\n          onChange={onJsonValueChange}\n          onPaste={onJsonValueChange}\n        />\n        {/* <div className=\"transfer-btn\">转换</div> */}\n        <textarea disabled placeholder=\"interface\" value={interfaceValue} />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(JsonToInterface)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Homepage from '@/pages/Homepage'\nimport JsonToInterface from '@/pages/JsonToInterface'\nimport { RouteConfig } from 'react-router-config'\n\nconst routes: RouteConfig[] = [\n  {\n    path: `${\n      process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : ''\n    }/`,\n    exact: true,\n    component: Homepage,\n  },\n  {\n    path: `${\n      process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : ''\n    }/json-to-interface`,\n    exact: true,\n    component: JsonToInterface,\n  },\n]\n\nexport default routes\n","import LanguageDetector from 'i18next-browser-languagedetector'\nimport i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport enUsTrans from './en-us.json'\nimport zhCnTrans from './zh-cn.json'\n\ni18n\n  .use(LanguageDetector) // 嗅探当前浏览器语言\n  .use(initReactI18next) // init i18next\n  .init({\n    // 引入资源文件\n    resources: {\n      en: {\n        translation: enUsTrans,\n      },\n      zh: {\n        translation: zhCnTrans,\n      },\n    },\n    // 选择默认语言，选择内容为上述配置中的key，即en/zh\n    fallbackLng: 'zh',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  })\n\nexport default i18n\n","/*\n * @Date: 2021-03-04 15:31:31\n * @LastEditors: ZHT\n * @LastEditTime: 2021-03-04 16:07:09\n */\nimport React from 'react'\nimport { renderRoutes } from 'react-router-config'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport routes from './routes'\nimport '@/lang/i18n'\nimport './App.css'\n\nconst App: React.FC = () => {\n  return <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}